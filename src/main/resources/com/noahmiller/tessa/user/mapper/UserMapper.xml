<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.noahmiller.tessa.user.mapper.UserMapper">

    <!-- ====================== 结果映射 ====================== -->
    <resultMap id="UserResultMap" type="com.noahmiller.tessa.user.entity_old.User">
        <!-- 主键映射 -->
        <id property="id" column="id" jdbcType="BIGINT" />

        <!-- 基础字段映射 -->
        <result property="username" column="username" jdbcType="VARCHAR" />
        <result property="email" column="email" jdbcType="VARCHAR" />
        <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR" />
        <result property="passwordHash" column="password_hash" jdbcType="VARCHAR" />
        <result property="salt" column="salt" jdbcType="VARCHAR" />
        <result property="birthday" column="birthday" jdbcType="DATE" />

        <!-- 枚举类型处理器 -->
        <result property="gender" column="gender" jdbcType="TINYINT"
                typeHandler="com.noahmiller.tessa.user.handler.GenderHandler" />
        <result property="status" column="status" jdbcType="TINYINT" />
        <result property="emailVerified" column="email_verified" jdbcType="BIT" />
        <result property="phoneVerified" column="phone_verified" jdbcType="BIT" />
        <result property="lastLogin" column="last_login" jdbcType="TIMESTAMP" />
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP" />
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP" />

        <!-- 关联城市对象 -->
        <association property="city" javaType="com.noahmiller.tessa.user.entity_old.City">
            <id property="id" column="city_id" jdbcType="BIGINT" />
            <result property="name" column="city_name" jdbcType="VARCHAR" />
            <result property="provinceName" column="province_name" jdbcType="VARCHAR" />
        </association>
    </resultMap>

    <!-- ====================== 插入操作 ====================== -->
    <insert id="insertUser" parameterType="com.noahmiller.tessa.user.entity_old.User"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (
            username, email, password_hash, salt,
            status, email_verified, phone_number,
            birthday, gender, city_id,
            phone_verified, last_login, create_time
        )
        VALUES (
                   #{username, jdbcType=VARCHAR},
                   #{email, jdbcType=VARCHAR},
                   #{passwordHash, jdbcType=VARCHAR},
                   #{salt, jdbcType=VARCHAR},
                   #{status.value, jdbcType=TINYINT},
                   #{emailVerified, jdbcType=BIT},
                   #{phoneNumber, jdbcType=VARCHAR},
                   #{birthday, jdbcType=DATE},
                   #{gender, jdbcType=TINYINT},
                   #{city.id, jdbcType=BIGINT},
                   #{phoneVerified, jdbcType=BIT},
                   #{lastLogin, jdbcType=TIMESTAMP},
                   NOW()
               )
    </insert>

    <!-- ====================== 查询操作 ====================== -->
    <select id="selectUserById" parameterType="java.lang.Long" resultMap="UserResultMap">
        SELECT
            u.*,
            c.id AS city_id,
            c.name AS city_name,
            p.name AS province_name
        FROM users u
                 LEFT JOIN cities c ON u.city_id = c.id
                 LEFT JOIN provinces p ON c.province_id = p.id
        WHERE u.id = #{id, jdbcType=BIGINT}
    </select>

    <select id="selectUserByUsername" parameterType="java.lang.String" resultMap="UserResultMap">
        SELECT
            u.*,
            c.id AS city_id,
            c.name AS city_name,
            p.name AS province_name
        FROM users u
                 LEFT JOIN cities c ON u.city_id = c.id
                 LEFT JOIN provinces p ON c.province_id = p.id
        WHERE u.username = #{username, jdbcType=VARCHAR}
    </select>

    <select id="selectUserByEmail" parameterType="java.lang.String" resultMap="UserResultMap">
        SELECT
            u.*,
            c.id AS city_id,
            c.name AS city_name,
            p.name AS province_name
        FROM users u
                 LEFT JOIN cities c ON u.city_id = c.id
                 LEFT JOIN provinces p ON c.province_id = p.id
        WHERE u.email = #{email, jdbcType=VARCHAR}
    </select>

    <select id="selectUserByPhoneNumber" parameterType="java.lang.String" resultMap="UserResultMap">
        SELECT
            u.*,
            c.id AS city_id,
            c.name AS city_name,
            p.name AS province_name
        FROM users u
                 LEFT JOIN cities c ON u.city_id = c.id
                 LEFT JOIN provinces p ON c.province_id = p.id
        WHERE u.phone_number = #{phoneNumber, jdbcType=VARCHAR}
    </select>

    <select id="selectAllUsers" resultMap="UserResultMap">
        SELECT
            u.*,
            c.id AS city_id,
            c.name AS city_name,
            p.name AS province_name
        FROM users u
                 LEFT JOIN cities c ON u.city_id = c.id
                 LEFT JOIN provinces p ON c.province_id = p.id
    </select>

    <!-- ====================== 更新操作 ====================== -->
    <update id="updateUser" parameterType="com.noahmiller.tessa.user.entity_old.User">
        UPDATE users
        <set>
            <if test="username != null">username = #{username, jdbcType=VARCHAR},</if>
            <if test="email != null">email = #{email, jdbcType=VARCHAR},</if>
            <if test="phoneNumber != null">phone_number = #{phoneNumber, jdbcType=VARCHAR},</if>
            <if test="passwordHash != null">password_hash = #{passwordHash, jdbcType=VARCHAR},</if>
            <if test="salt != null">salt = #{salt, jdbcType=VARCHAR},</if>
            <if test="birthday != null">birthday = #{birthday, jdbcType=DATE},</if>
            <if test="gender != null">gender = #{gender, jdbcType=TINYINT},</if>
            <if test="city != null and city.id != null">city_id = #{city.id, jdbcType=BIGINT},</if>
            <if test="status != null">status = #{status.value, jdbcType=TINYINT},</if>
            <if test="emailVerified != null">email_verified = #{emailVerified, jdbcType=BIT},</if>
            <if test="phoneVerified != null">phone_verified = #{phoneVerified, jdbcType=BIT},</if>
            <if test="lastLogin != null">last_login = #{lastLogin, jdbcType=TIMESTAMP},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id, jdbcType=BIGINT}
    </update>

    <!-- ====================== 删除操作 ====================== -->
    <delete id="deleteUserById" parameterType="java.lang.Long">
        DELETE FROM users
        WHERE id = #{id, jdbcType=BIGINT}
    </delete>

    <!-- ====================== 存在性检查（COUNT(1) 版本）====================== -->
    <select id="existsById" parameterType="java.lang.Long" resultType="java.lang.Boolean">
        SELECT COUNT(1) FROM users
        WHERE id = #{id, jdbcType=BIGINT}
    </select>

    <select id="existsByEmail" parameterType="java.lang.String" resultType="java.lang.Boolean">
        SELECT COUNT(1) FROM users
        WHERE email = #{email, jdbcType=VARCHAR}
    </select>

    <select id="existsByUsername" parameterType="java.lang.String" resultType="java.lang.Boolean">
        SELECT COUNT(1) FROM users
        WHERE username = #{username, jdbcType=VARCHAR}
    </select>

    <select id="existsByPhoneNumber" parameterType="java.lang.String" resultType="java.lang.Boolean">
        SELECT COUNT(1) FROM users
        WHERE phone_number = #{phoneNumber, jdbcType=VARCHAR}
    </select>

    <!-- ====================== 条件查询 ====================== -->
    <select id="selectUsersByStatus" parameterType="com.noahmiller.tessa.user.entity_old.UserStatus" resultMap="UserResultMap">
        SELECT
            u.*,
            c.id AS city_id,
            c.name AS city_name,
            p.name AS province_name
        FROM users u
                 LEFT JOIN cities c ON u.city_id = c.id
                 LEFT JOIN provinces p ON c.province_id = p.id
        WHERE u.status = #{value, jdbcType=TINYINT}
    </select>

    <select id="isEmailVerified" resultType="java.lang.Boolean">
        SELECT users.email_verified FROM users WHERE email = #{email};
    </select>

    <select id="isPhoneVerifyied">
        SELECT users.phone_verified FROM users WHERE phone_number = #{phoneNumber};
    </select>
</mapper>